function fphandles = createDynamicsGridFlex(fphandles)
% Creates the resizable GUI elements in the dynamics window. The resize
% function is called dynamicsResizeFcn.m
%
%    Input:
%     fphandles   - handles structure of the FRETpairwindow
%
%    Output:
%     fphandles   - ..
%

% --- Copyrights (C) ---
%
% This file is part of:
% iSMS - Single-molecule FRET microscopy software
% Copyright (C) Aarhus University, @ V. Birkedal Lab
% <http://isms.au.dk>
%
%     This program is free software: you can redistribute it and/or modify
%     it under the terms of the GNU General Public License as published by
%     the Free Software Foundation, either version 3 of the License, or
%     (at your option) any later version.
%
%     The GNU General Public License is found at
%     <http://www.gnu.org/licenses/gpl.html>.

%% Initialize

% Color definitions
backgrColor = get(fphandles.figure1,'Color'); % Background color
purpleColor = [2*101/255 2*90/255 1.5*159/255]; 
grayColor = [0.88 0.88 0.88];
whiteColor = [1 1 1];
lightblueColor = [0.75 0.9 1];
lightblueColor2 = [0.80 0.92 0.99];
lightblueColor3 = [0.90 0.94 0.99];
orangeColor = [255/255 229/255 11/255];

% Put a layout in the panel 
VBoxFlex = uiextras.VBoxFlex( 'Parent', fphandles.gridflexPanel, ...
    'Units', 'Normalized', 'Position', [0 0 1 1], ...
    'Spacing', 5 );

%% Top side of GUI

HBoxFlexTop = uiextras.HBoxFlex( 'Parent', VBoxFlex, ...
    'Units', 'Normalized', 'Position', [0 0 1 1], ...
    'Spacing', 5 );

% Top left part
VBoxFlexTopLeft = uiextras.VBoxFlex( 'Parent', HBoxFlexTop, ...
    'Units', 'Normalized', 'Position', [0 0 1 1], ...
    'Spacing', 5 );

% Pair listbox
setappdata(0,'tooltipCloseString', 'Remove selected from list')
fphandles.pairlistboxBoxPanel = uiextras.BoxPanel( ...
    'Parent', VBoxFlexTopLeft,...
    'Title', 'Traces analysed',...
    'BackgroundColor','white',...
    'TitleColor', lightblueColor2,...
    'CloseRequestFcn', {@dynamicswindowTraceDeleteFcn, fphandles.figure1});%,...
fphandles.PairListbox = uicontrol(...
    'Parent', fphandles.pairlistboxBoxPanel,...
    'Style', 'listbox',...
    'String', '',...
    'max', 2,...
    'units', 'normalized',...
    'Tag', 'FilesListbox',...
    'Position', [0 0 1 1],...
    'BackgroundColor', 'white',...
    'Interruptible', 'off',...
    'Callback', {@dynamicswindowPairlistCallback, fphandles.figure1});

% Trace axes
% Top left part

% setappdata(0,'tooltipMenuString', 'Settings for selected menu item')
traceboxBoxPanel = uiextras.BoxPanel( ...
    'Parent', HBoxFlexTop,...
    'Title', 'Idealized trace ',...
    'BackgroundColor','white',...
    'TitleColor', lightblueColor2);
%     'HelpFcn', {@framesHelpFcn, dwhandles.figure1},...
%     'MenuFcn', {@framesMenuFcn, dwhandles.figure1},...
fphandles.TraceAxes = axes(...
    'Parent', traceboxBoxPanel,...
    'Tag', 'TraceAxes',...
    'Color', 'white',...
    'units', 'normalized',...
    'OuterPosition', [0 0 1 1]);

%% Lower side of GUI

HBoxFlexBottom = uiextras.HBoxFlex( 'Parent', VBoxFlex, ...
    'Units', 'Normalized', 'Position', [0 0 1 1], ...
    'Spacing', 5 );

%% Left lower

% Top left part of lower side
VBoxFlexBottomLeft = uiextras.VBoxFlex( 'Parent', HBoxFlexBottom, ...
    'Units', 'Normalized', 'Position', [0 0 1 1], ...
    'Spacing', 5 );

% State listbox
% setappdata(0,'tooltipMenuString', 'Rename data')
fphandles.statelistboxBoxPanel = uiextras.BoxPanel( ...
    'Parent', VBoxFlexBottomLeft,...
    'Title', 'States',...
    'BackgroundColor',backgrColor,...
    'TitleColor', grayColor);
%     'MenuFcn', {@filespanelMenuFcn, dwhandles.figure1},...
fphandles.StateListbox = uicontrol(...
    'Parent', fphandles.statelistboxBoxPanel,...
    'Style', 'listbox',...
    'String', '',...
    'units', 'normalized',...
    'max', 2,...
    'Tag', 'FilesListbox',...
    'Position', [0 0 1 1],...
    'BackgroundColor', 'white',...
    'Interruptible', 'off',...
    'Callback', {@dynamicswindowStatelistCallback, fphandles.figure1});

% Group listbox
% setappdata(0,'tooltipMenuString', 'Rename data')
fphandles.grouplistboxBoxPanel = uiextras.BoxPanel( ...
    'Parent', VBoxFlexBottomLeft,...
    'Title', 'State groups',...
    'BackgroundColor', backgrColor,...
    'TitleColor', grayColor);
%     'MenuFcn', {@filespanelMenuFcn, dwhandles.figure1},...
fphandles.GroupListbox = uicontrol(...
    'Parent', fphandles.grouplistboxBoxPanel,...
    'Style', 'listbox',...
    'String', '',...
    'units', 'normalized',...
    'Tag', 'GroupListbox',...
    'Position', [0 0 1 1],...
    'BackgroundColor', 'white',...
    'max', 2,...
    'Interruptible', 'off',...
    'Callback', {@dynamicswindowStatelistCallback, fphandles.figure1});

%% Right lower

VBoxFlexBottomRight = uiextras.VBoxFlex( 'Parent', HBoxFlexBottom, ...
    'Units', 'Normalized', 'Position', [0 0 1 1], ...
    'Spacing', 5 );
% setappdata(0,'tooltipMenuString', 'Settings for contrast slider')
histBoxPanel = uiextras.BoxPanel( ...
    'Parent', VBoxFlexBottomRight,...
    'Title', 'Plot info',...
    'TitleColor', grayColor);
uipanelHist = uipanel(...
    'Parent', histBoxPanel,...
    'Units', 'normalized',...
    'Position', [0 0 1 0.9]);

% Hist axes 
uipanelHistAx = uipanel(...
    'Parent', uipanelHist,...
    'BorderType', 'none',...
    'Units', 'normalized',...
    'BackgroundColor', 'white',...
    'Position', [0 0 1 0.9]);%,...
fphandles.HistAxes = axes(...
    'Parent', uipanelHistAx,...
    'Tag', 'HistAxes',...
    'Color', 'white',...
    'units', 'normalized',...
    'OuterPosition', [0 0 1 1]);

% Top bar
uipanelHisttop = uipanel(...
    'Parent', uipanelHist,...
    'Units', 'normalized',...
    'BorderType', 'none',...
    'Units', 'normalized',...
    'Position', [0 0.9 1 0.1],...
    'ResizeFcn', {@dynamicswindowHisttopbarResizeFcn, fphandles.figure1},...
    'BackgroundColor', 'white');
% Popupmenu
listStr = {'Dwell times histogram (select states)';...
    'No. of states';...
    'Transition density plot (select traces)';...
    'FRET histogram (select states)';...
    'Mean dwell times scatter (select states)';...
    'Dwell times scatter (select states)'};
fphandles.PlotPopupmenu = uicontrol(...
    'Parent', uipanelHisttop,...
    'Style', 'popupmenu',...
    'String', listStr,...
    'units', 'normalized',...
    'Tag', 'PlotPopupmenu',...
    'BackgroundColor','white',...
    'Position', [0 0.95 .7 0.05],...
    'Interruptible', 'off',...
    'Callback', {@dynamicswindowPopupmenuCallback, fphandles.figure1});
% Contrastslider
fphandles.binSlider = uicontrol(...
    'Parent', uipanelHisttop,...
    'Style', 'slider',...
    'TooltipString', 'Bins',...
    'Interruptible', 'off',...
    'Value', 10,...
    'max', 101,...
    'min', 1.0,...
    'sliderStep', [0.01 0.1],...
    'Tag', 'binSlider',...
    'BackgroundColor', backgrColor,...
    'Callback', {@dynamicswindowBinsliderCallback,fphandles.figure1},...
    'units', 'normalized');
% Bin textbox
fphandles.BinsTextbox = uicontrol(...
    'Style', 'text',...
    'Parent', uipanelHisttop,...
    'Tag', 'BinsTextbox',...
    'BackgroundColor', get(uipanelHisttop,'BackgroundColor'),...
    'ForegroundColor', abs([1 1 1]-get(uipanelHisttop,'BackgroundColor')),...
    'String', 'Bins: 10',...
    'HorizontalAlignment', 'left',...
    'units', 'normalized');


% Remove temporary appdata
% rmappdata(0,'tooltipMenuString')
% rmappdata(0,'tooltipRunString')

% Right side
fphandles.uipanelHist = uipanelHist;
fphandles.uipanelHistAx = uipanelHistAx;
fphandles.uipanelHisttop = uipanelHisttop;
fphandles.histBoxPanel = histBoxPanel;

%% Element sizes

VBoxFlex.Sizes = [-3 -5]; % Row sizes
HBoxFlexTop.Sizes = [-1 -4]; % Row sizes
HBoxFlexBottom.Sizes = [-1 -4]; % Column sizes
VBoxFlexBottomLeft.Sizes = [-4 -1]; % Column sizes
% VBoxFlexBottomRight.Sizes = [-4 -1]; % Column sizes
% VBoxFlexRight.Sizes = [-4 -1]; % Row sizes

% Update handles
guidata(fphandles.figure1,fphandles)
% updatemainhandles(dwhandles)
end

function dockFcn( hObject, eventData, mainhandle, whichpanel )
% Get box panel object
try  mainhandles = guidata(mainhandle);
    [boxPanel, parentFlex] = getwhichpanel();
catch err
    mainhandle = getappdata(0,'mainhandle');
    mainhandles = guidata(mainhandle);
    [boxPanel, parentFlex] = getwhichpanel();
end

% Set the flag
boxPanel.IsDocked = ~boxPanel.IsDocked;
if boxPanel.IsDocked
    % Put it back into the layout
    newfig = get( boxPanel, 'Parent' );
    set( boxPanel, 'Parent', parentFlex );
    delete( newfig );
else
    % Take it out of the layout
    pos = getpixelposition( boxPanel );
    newfig = figure( ...
        'Name', get( boxPanel, 'Title' ), ...
        'NumberTitle', 'off', ...
        'MenuBar', 'none', ...
        'Toolbar', 'none', ...
        'CloseRequestFcn', { @dockFcn, mainhandle, whichpanel} );
    updatelogo(newfig)
    figpos = get( newfig, 'Position' );
    set( newfig, 'Position', [figpos(1,1:2), pos(1,3:4)] );
    set( boxPanel, 'Parent', newfig, ...
        'Units', 'Normalized', ...
        'Position', [0 0 1 1] );
end

    function [boxPanel, parentFlex] = getwhichpanel(~)
        % Returns relevant handles to current object
        if strcmpi(whichpanel,'mboard')
            boxPanel = mainhandles.mboardBoxPanel;
            parentFlex =  mainhandles.VBoxFlexLeft;

        elseif strcmpi(whichpanel, 'peakfinder')
            boxPanel = mainhandles.peakfinderBoxPanel;
            parentFlex = mainhandles.HBoxFlexTopLeft;
        end
    end

end

function answer = integrationSettings(mainhandle,DefAns)
% integrationSettings creates a modal dialog box that returns user input for
% multiple prompts in the cell array ANSWER. integrationSettings uses UIWAIT
% to suspend execution until the user responds.
%
%    Input:
%     mainhandle  - handle to the main figure window (sms)
%     DefAns      - default answers structure
%
%    Output:
%     answer      - structure with users answers
%

% --- Copyrights (C) ---
%
% This file is part of:
% iSMS - Single-molecule FRET microscopy software
% Copyright (C) Aarhus University, @ V. Birkedal Lab
% <http://isms.au.dk>
%
%     This program is free software: you can redistribute it and/or modify
%     it under the terms of the GNU General Public License as published by
%     the Free Software Foundation, either version 3 of the License, or
%     (at your option) any later version.
%
%     The GNU General Public License is found at
%     <http://www.gnu.org/licenses/gpl.html>.

%% Initialize

answer = [];

% Check number of input arguments
if (isempty(mainhandle)) || (~ishghandle(mainhandle))
    return
end
mainhandles = guidata(mainhandle); % Get mainhandles structure

%% Create GUI window

h.figure1 = dialog(...
    'Name',     'Intensity settings',...
    'Units',    'pixels',...
    'Position', [520  635  551  165],...
    'Visible',  'off',...
    'UserData', 'Cancel');
movegui(h.figure1,'center')
updatelogo(h.figure1) % Update logo

%--------- Create GUI components ---------%
% Textbox
h.whTextbox = uicontrol(...
    'Parent',   h.figure1,...
    'Style',    'text',...
    'String',   'Default integration area size (pixels):',...
    'Units',    'pixels',...
    'HorizontalAlignment', 'left',...
    'Position', [15  148  202  14]...
    );
% Editbox
h.whEditbox = uicontrol(...
    'Parent',   h.figure1,...
    'Style',    'edit',...
    'String',   DefAns.wh,...
    'Units',    'pixels',...
    'Position', [230  144  57  22],...
    'BackgroundColor',  'white'...
    );

% Textbox
h.intensitytypeTextbox = uicontrol(...
    'Parent',   h.figure1,...
    'Style',    'text',...
    'String',   'Intensity:',...
    'HorizontalAlignment',   'left',...
    'Units',    'pixels',...
    'position', [15  113  55  14]);
% Popupmenu
h.typeListbox = uicontrol(...
    'Parent',   h.figure1,...
    'Style',    'popupmenu',...
    'String',   {'Intensity mask (aperture photometry)',...
                 '2D Gaussian by Maximum Likelihood Estimation (Mortensen & Flyvbjerg''s MLEwG)',...
                 '2D Gaussian Mask Estimator (least-squares fit, e.g. TwoTone)'},...
    'Value',    DefAns.type,...
    'Units',    'pixels',...
    'Position', [75  111  451  20],...
    'BackgroundColor',  'white'...
    );

% Checkbox
h.constraincenterCheckbox = uicontrol(...
    'Parent',   h.figure1,...
    'Style',    'check',...
    'String',   'Constrain center based on average image',...
    'Value',    DefAns.constrainGaussianCenter,...
    'Enable',   'off',...
    'Units',    'pixels',...
    'Position', [74  78  238  23]...
    );

% Checkbox
h.constrainFWHMCheckbox = uicontrol(...
    'Parent',   h.figure1,...
    'Style',    'check',...
    'String',   'Constrain FWHM based on average image',...
    'Value',    DefAns.constrainGaussianFWHM,...
    'Enable',   'off',...
    'Units',    'pixels',...
    'Position', [74  49  238  23]...
    );

%-- OK pushbutton --%
h.OKpushbutton = uicontrol(...
    'Parent',   h.figure1,...
    'String',   'OK',...
    'Style',    'pushbutton',...
    'Units',    'pixels',...
    'Position', [158  11  59  25]...
    );

%-- Cancel pushbutton --%
h.CancelPushbutton = uicontrol(...
    'Parent',   h.figure1,...
    'String',   'Cancel',...
    'Style',    'pushbutton',...
    'Units',    'pixels',...
    'Position', [229  11  59  25]...
    );

%% Set callbacks

set(h.typeListbox,'Callback',{@updateGUI, h}); % Assign callback
set(h.whEditbox,'Callback',{@updateGUI, h});
set(h.OKpushbutton,'Callback',{@pushbutton_Callback, h}); % Assign callback
set(h.CancelPushbutton,'Callback',{@pushbutton_Callback, h}); % Assign callback

%% Update dialog

guidata(h.figure1,h)
updateGUI([],[],h)
set(h.figure1,'Visible','on')

% For closing the figure
if ishghandle(h.figure1)
  % Go into uiwait if the figure handle is still valid.
  % This is mostly the case during regular use.
  uiwait(h.figure1);
end

%% This code hereafter is only run once uiresume is called

% Check handle validity again since we may be out of uiwait because the
% figure was deleted.
if ishghandle(h.figure1)
  if strcmp(get(h.figure1,'UserData'),'OK')
      answer.type = get(h.typeListbox,'Value'); % How intensity is calculated. 1 = sum pixel values. 2 = 2D Gaussian fit.
      answer.constrainGaussianCenter = get(h.constraincenterCheckbox,'Value');
      answer.constrainGaussianFWHM = get(h.constraincenterCheckbox,'Value');
      answer.wh = str2num(get(h.whEditbox,'String'));
  end
  delete(h.figure1);
else
  answer = [];
end

%-----------------------------------------------------------%
%-----------------------------------------------------------%
%-----------------------------------------------------------%

function pushbutton_Callback(hObject,eventdata,h) %%
if ~strcmp(get(hObject,'String'),'Cancel')
    set(gcbf,'UserData','OK');
    uiresume(gcbf);
else
    delete(gcbf)
end

function updateGUI(Object,eventdata,h) %% Updates the visibility of the individual GUI components depending on the selection choices
h_temp = [h.constraincenterCheckbox  h.constrainFWHMCheckbox ];

% Check intensity type
typechoice = get(h.typeListbox,'Value');
if (typechoice==1)
    set(h_temp,'Visible','off')
elseif (typechoice==2)
    set(h_temp,'Visible','on')
end

% Check wh value is higher than 1
wh = str2num(get(h.whEditbox,'String'));
if wh<1
    set(h.whEditbox,'String',1)
end